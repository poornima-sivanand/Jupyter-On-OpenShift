---
kind: Template
apiVersion: v1
metadata:
  name: jupyter-notebook-quickstart
objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: "${APPLICATION_NAME}"
      labels:
        app: "${APPLICATION_NAME}"
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      name: "${APPLICATION_NAME}"
      labels:
        app: "${APPLICATION_NAME}"
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: "${APPLICATION_NAME}:${VERSION}"
      resources:
        limits:
          memory: 1Gi
      source:
        type: Git
        git:
          uri: "${GIT_REPOSITORY_URL}"
          ref: "${GIT_REFERENCE}"
        contextDir: "${CONTEXT_DIR}"
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: DockerImage
            name: "${BUILDER_IMAGE}"
          scripts: "${BUILDER_SCRIPTS}"
      triggers:
      - type: ConfigChange
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: "${APPLICATION_NAME}-cfg"
      labels:
        app: "${APPLICATION_NAME}"
    data:
      jupyter_notebook_config.py: |
        import os

        password = os.environ.get('JUPYTER_NOTEBOOK_PASSWORD')

        if password:
            import notebook.auth
            c.NotebookApp.password = notebook.auth.passwd(password)
            del password
            del os.environ['JUPYTER_NOTEBOOK_PASSWORD']

        image_config_file = '/home/jovyan/.jupyter/jupyter_notebook_config.py'

        if os.path.exists(image_config_file):
            with open(image_config_file) as fp:
                exec(compile(fp.read(), image_config_file, 'exec'), globals())
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: "${APPLICATION_NAME}"
      labels:
        app: "${APPLICATION_NAME}"
    spec:
      strategy:
        type: Recreate
      triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
          - jupyter-notebook
          from:
            kind: ImageStreamTag
            name: "${APPLICATION_NAME}:${VERSION}"
      replicas: 1
      selector:
        app: "${APPLICATION_NAME}"
        deploymentconfig: "${APPLICATION_NAME}"
      template:
        metadata:
          annotations:
            alpha.image.policy.openshift.io/resolve-names: "*"
          labels:
            app: "${APPLICATION_NAME}"
            deploymentconfig: "${APPLICATION_NAME}"
        spec:
          containers:
          - name: jupyter-notebook
            image: "${APPLICATION_NAME}:${VERSION}"
            command:
            - start-notebook.sh
            - "--config=/etc/jupyter/openshift/jupyter_notebook_config.py"
            - "--no-browser"
            - "--ip=0.0.0.0"
            ports:
            - containerPort: 8080
              protocol: TCP
            env:
            - name: JUPYTER_NOTEBOOK_PASSWORD
              value: "${NOTEBOOK_PASSWORD}"
            volumeMounts:
            - mountPath: "/etc/jupyter/openshift"
              name: configs
          automountServiceAccountToken: false
          securityContext:
            supplementalGroups:
            - 100
          volumes:
          - configMap:
              name: "${APPLICATION_NAME}-cfg"
            name: configs
  - kind: Route
    apiVersion: v1
    metadata:
      name: "${APPLICATION_NAME}"
      labels:
        app: "${APPLICATION_NAME}"
    spec:
      host: ''
      to:
        kind: Service
        name: "${APPLICATION_NAME}"
        weight: 100
      port:
        targetPort: 8080-tcp
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
  - kind: Service
    apiVersion: v1
    metadata:
      name: "${APPLICATION_NAME}"
      labels:
        app: "${APPLICATION_NAME}"
    spec:
      ports:
      - name: 8080-tcp
        protocol: TCP
        port: 8080
        targetPort: 8080
      selector:
        app: "${APPLICATION_NAME}"
        deploymentconfig: "${APPLICATION_NAME}"
      type: ClusterIP

parameters:
  - name: APPLICATION_NAME
    value: notebook
    required: true
  - name: BUILDER_IMAGE
    value: jupyter/minimal-notebook:latest
    required: true
  - name: BUILDER_SCRIPTS
    value: https://raw.githubusercontent.com/jupyter/docker-stacks/master/examples/source-to-image
    required: true
  - name: GIT_REPOSITORY_URL
    value: ''
    required: true
  - name: GIT_REFERENCE
    value: master
    required: true
  - name: CONTEXT_DIR
    value: ''
    required: false
  - name: NOTEBOOK_PASSWORD
    from: "[a-f0-9]{32}"
    generate: expression
  - name: VERSION 
    value: '1.0'
